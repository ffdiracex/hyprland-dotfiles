#!/bin/bash

# Function for prompting user for a mountpoint.
get_mountpoint() {
    mp="$(find /mnt /media /mount /home -maxdepth 1 -type d 2>/dev/null | fzf --prompt="Mount this drive where?")"
    test -n "$mp"
    if [ ! -d "$mp" ]; then
        mkdir_yn=$(printf "No\\nYes" | fzf --prompt="$mp does not exist. Create it?")
        [ "$mkdir_yn" = "Yes" ] && (mkdir -p "$mp" || sudo mkdir -p "$mp")
    fi
}

# Attempt to mount using udisksctl
mount_udisksctl() {
    udisksctl mount -b "$1" --no-user-interaction
}

# Attempt to mount Android device using android-file-transfer
mount_android() {
    get_mountpoint
    sudo -A android-file-transfer --device "$1" --mount "$mp"
    dunstify "ü§ñ Android Mounted." "Android device mounted to $mp."
}

# List available partitions and devices.
list_devices() {
    lsblk -rpo "name,type,size,label,mountpoint,fstype"
}

# Quit the script if a sequential command fails.
set -e

# List available devices and partitions.
chosen_device="$(list_devices | fzf --prompt="Select a device to mount:" | awk '{print $1}')"

# Check if the chosen device is an Android device.
if [[ "$chosen_device" =~ "/dev/bus/" ]]; then
    mount_android "$chosen_device"
else
    # Attempt to mount using udisksctl.
    if [ -n "$chosen_device" ]; then
        mount_udisksctl "$chosen_device"
        dunstify "üíæ Drive Mounted." "$chosen_device mounted to $mp."
    else
        dunstify "‚ùóError" "No device selected for mounting."
    fi
fi

